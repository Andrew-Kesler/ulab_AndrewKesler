Homework 5


Problem 1:
1. Use the command "pwd" to know your absolute path.
2. Use the command "ls" to view all directories and files inside “ /̃music/ ”. The files listed will depend on what is actually inside “ /̃music/ ”.
3. Use the command "nano patterns.txt" or "vim patterns.txt" to open and edit “ patterns.txt” in “ /̃music/”.
4. Use the command "cat patterns.txt" to print the file on your terminal instead of opening it.
5. Use the command "diff patterns.txt symmetry.txt" to see the difference between “ patterns.txt” and “ symmetry.txt ”.
6. Use the command "mv patterns.txt ~/math/calculus/" to move “patterns.txt” to “ /̃math/calculus/ ”.
7. Use the command "rm ~/math/geometry/triangle.txt" to remove “ triangle.txt” from “ /̃math/geometry”.
8. Use the command "cd ../math" to move from “/̃music/ ” to “ /̃math/” using the relative path.
9. Use the command "git init" in the “ math/” directory to make it a local Git repository.
10. Use the command "git remote add origin <remote-repository-URL>" to connect the local “ math/” repository with the remote one.
11. Use the command "cp ~/music/symmetry.txt ~/math/" to copy “symmetry.txt” to your local “math/” repository.
12. Use the command "git status" to view the current state of your working directory and staging area. Git is not tracking “symmetry.txt” unless it has been added to the staging area.
13. Use the command "git add symmetry.txt" to add only the copy of “symmetry.txt” to the staging area. Use "git add ." to add all changes to all files and directories.
14. Git starts tracking “symmetry.txt” after it is added to the staging area. Use the command "git restore --staged symmetry.txt" to unstage “ symmetry.txt”.
15. Use the command "git commit -m 'Add symmetry.txt to the repository'" to commit staged files to your local repository.
16. Use the command "git push origin <branch-name>" to push the local repository to the remote repository. Push to the main or master branch, depending on your remote repository's default branch.
17. Use the command "git branch applied-math" to make a new branch called “applied-math”.
18. Use the command "git checkout applied-math" to move into the  “applied-math” branch.
19. After making the changes, use the commands:
* "git add ."
* "git commit -m 'Add physics directory and mechanics.txt'"
* "git push origin applied-math"
If you switch back to your original branch before committing these changes, they will be lost unless saved.
20. Use the command "git branch" to list all branches. The currently active branch will be highlighted in green.
21. Use the command "git checkout <branch-name>" to move back to your original branch.
22. Use the command "git merge applied-math" from your original branch to combine it with the “applied-math” branch.
23.